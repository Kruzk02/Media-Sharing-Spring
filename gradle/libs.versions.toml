# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
com-fasterxml-jackson-core-jackson-core = "2.20.0"
com-fasterxml-jackson-core-jackson-databind = "2.20.0"
com-mysql-mysql-connector-j = "9.4.0"
com-redis-testcontainers-redis = "2.2.4"
io-jsonwebtoken-jjwt-api = "0.13.0"
io-jsonwebtoken-jjwt-impl = "0.13.0"
io-jsonwebtoken-jjwt-jackson = "0.13.0"
junit-junit = "4.13.2"
me-paulschwarz-spring-dotenv = "4.0.0"
org-apache-commons-commons-lang3 = "3.19.0"
org-modelmapper-modelmapper = "3.2.5"
org-projectlombok-lombok = "1.18.42"
org-springdoc-springdoc-openapi-starter-webmvc-ui = "2.8.13"
org-springframework-boot-spring-boot-docker-compose = "3.5.6"
org-springframework-boot-spring-boot-starter-aop = "3.5.6"
org-springframework-boot-spring-boot-starter-cache = "3.5.6"
org-springframework-boot-spring-boot-starter-data-jdbc = "3.5.6"
org-springframework-boot-spring-boot-starter-data-redis = "3.5.6"
org-springframework-boot-spring-boot-starter-mail = "3.5.6"
org-springframework-boot-spring-boot-starter-security = "3.5.6"
org-springframework-boot-spring-boot-starter-test = "3.5.6"
org-springframework-boot-spring-boot-starter-validation = "3.5.6"
org-springframework-boot-spring-boot-starter-web = "3.5.6"
org-springframework-kafka-spring-kafka = "3.3.10"
org-springframework-security-spring-security-test = "6.5.6"
org-testcontainers-junit-jupiter = "1.21.3"
org-testcontainers-mysql = "1.21.3"
org-testcontainers-testcontainers = "1.21.3"

[libraries]
com-fasterxml-jackson-core-jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "com-fasterxml-jackson-core-jackson-core" }
com-fasterxml-jackson-core-jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "com-fasterxml-jackson-core-jackson-databind" }
com-mysql-mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "com-mysql-mysql-connector-j" }
com-redis-testcontainers-redis = { module = "com.redis:testcontainers-redis", version.ref = "com-redis-testcontainers-redis" }
io-jsonwebtoken-jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "io-jsonwebtoken-jjwt-api" }
io-jsonwebtoken-jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "io-jsonwebtoken-jjwt-impl" }
io-jsonwebtoken-jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "io-jsonwebtoken-jjwt-jackson" }
junit-junit = { module = "junit:junit", version.ref = "junit-junit" }
me-paulschwarz-spring-dotenv = { module = "me.paulschwarz:spring-dotenv", version.ref = "me-paulschwarz-spring-dotenv" }
org-apache-commons-commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "org-apache-commons-commons-lang3" }
org-modelmapper-modelmapper = { module = "org.modelmapper:modelmapper", version.ref = "org-modelmapper-modelmapper" }
org-projectlombok-lombok = { module = "org.projectlombok:lombok", version.ref = "org-projectlombok-lombok" }
org-springdoc-springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "org-springdoc-springdoc-openapi-starter-webmvc-ui" }
org-springframework-boot-spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "org-springframework-boot-spring-boot-docker-compose" }
org-springframework-boot-spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "org-springframework-boot-spring-boot-starter-aop" }
org-springframework-boot-spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "org-springframework-boot-spring-boot-starter-cache" }
org-springframework-boot-spring-boot-starter-data-jdbc = { module = "org.springframework.boot:spring-boot-starter-data-jdbc", version.ref = "org-springframework-boot-spring-boot-starter-data-jdbc" }
org-springframework-boot-spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "org-springframework-boot-spring-boot-starter-data-redis" }
org-springframework-boot-spring-boot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "org-springframework-boot-spring-boot-starter-mail" }
org-springframework-boot-spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "org-springframework-boot-spring-boot-starter-security" }
org-springframework-boot-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot-spring-boot-starter-test" }
org-springframework-boot-spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "org-springframework-boot-spring-boot-starter-validation" }
org-springframework-boot-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "org-springframework-boot-spring-boot-starter-web" }
org-springframework-kafka-spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "org-springframework-kafka-spring-kafka" }
org-springframework-security-spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "org-springframework-security-spring-security-test" }
org-testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "org-testcontainers-junit-jupiter" }
org-testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "org-testcontainers-mysql" }
org-testcontainers-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "org-testcontainers-testcontainers" }
